multiplot(p1,p2,p3,p4,p6,p7,p8,p9,cols = 3)
ok <- filter(calibration_data, MaxLogRatio<2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDeviation>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
View(ok)
p1 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxLogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "top")
multiplot(p1,p2,p3,p4,p6,p7,p8,p9,cols = 3)
View(data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(data)
View(calibration_data)
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDeviation>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
View(ok)
View(ok3)
View(ok)
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDeviation>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
View(ok)
View(ok3)
View(ok2)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDeviation>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
View(ok)
View(ok3)
View(ok2)
View(ok)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ggplot(calibration_data, aes(fill=Polarity, x=Len.Local.Maxima.X, y=Len.X.flips))+geom_point()
ggplot(calibration_data, aes(colorl=Polarity, x=Len.Local.Maxima.X, y=Len.X.flips))+geom_point()
ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=Len.X.flips))+geom_point()
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=X.flips))+geom_point()
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=X.flips))+geom_point()
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDeviation>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
View(ok3)
View(ok)
View(ok)
p1 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxLogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "top")
p2 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDifference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p3 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviation, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p4 <- ggplot(calibration_data, aes(fill=Polarity, x=Int.LogRatio.Fin, color=Polarity)) + geom_histogram(alpha=.2, binwidth=5)+ theme(legend.position = "none")
p5 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(Int.X.AccPeak), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1)+ theme(legend.position = "none")
p6 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviationBorder, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05) + theme(legend.position = "none")
p7 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(AUC), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1) + theme(legend.position = "none")
p8 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.LogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p9 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.Difference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
multiplot(p1,p2,p3,p4,p6,p7,p8,p9,cols = 3)
ok2 <- filter(calibration_data, MaxDiffeerence>1 & Polarity=='uncertain')
ok2 <- filter(calibration_data, MaxDifference>1 & Polarity=='uncertain')
View(ok2)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
ok <- filter(calibration_data, MaxLogRatio<=2 & Polarity=='deviated')
ok2 <- filter(calibration_data, MaxDifference>1 & Polarity=='uncertain')
ok3 <- filter(calibration_data, abs(AUC)<20 & Polarity=='uncertain')
View(ok)
View(ok2)
View(ok3)
# iff MaxLogRatio > 2, 'deviated'; else 'uncertain'
classified_data <- calibration_data_new_subjects %>%
select(randomID, MaxLogRatio_NEW, Polarity) %>%
mutate(classification= if_else(MaxLogRatio_NEW=>2,
'class.deviation',
if_else(MaxLogRatio_NEW>0.1 & MaxLogRatio_NEW <= 2,
'class.uncertain',
'class.straight')))
ggplot(classified_data, aes(x=MaxLogRatio_NEW, y=classification, color=Polarity)) +
geom_point(shape=1, alpha=.5,      # Use hollow circles
position=position_jitter(width=1,height=.5)) + scale_x_continuous(breaks=seq(-1, 8, 0.5))
source('~/WebstormProjects/negationMT/R_scripts/choosing_measures.R', echo=TRUE)
source('~/WebstormProjects/negationMT/R_scripts/choosing_measures.R', echo=TRUE)
## See the distribution in real data
p1 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxLogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "top")
p2 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDifference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p3 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviation, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p4 <- ggplot(calibration_data, aes(fill=Polarity, x=Int.LogRatio.Fin, color=Polarity)) + geom_histogram(alpha=.2, binwidth=5)+ theme(legend.position = "none")
p5 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(Int.X.AccPeak), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1)+ theme(legend.position = "none")
p6 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviationBorder, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05) + theme(legend.position = "none")
p7 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(AUC), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1) + theme(legend.position = "none")
p8 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.LogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p9 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.Difference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
multiplot(p1,p2,p3,p4,p6,p7,cols = 3)
## See the distribution in real data
p1 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxLogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "top")
p2 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDifference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p3 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviation, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p4 <- ggplot(calibration_data, aes(fill=Polarity, x=Int.LogRatio.Fin, color=Polarity)) + geom_histogram(alpha=.2, binwidth=5)+ theme(legend.position = "none")
p5 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(Int.X.AccPeak), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1)+ theme(legend.position = "none")
p6 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviationBorder, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05) + theme(legend.position = "none")
p7 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(AUC), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1) + theme(legend.position = "none")
p8 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.LogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p9 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.Difference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p10 <- ggplot(calibration_data, aes(fill=Polarity, x=X.flips, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
multiplot(p1,p2,p3,p4,p6,p7,p10,cols = 3)
multiplot(p1,p2,p3,p4,p6,p10,cols = 3)
p1 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxLogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "top")
p2 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDifference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p3 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviation, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05)+ theme(legend.position = "none")
p4 <- ggplot(calibration_data, aes(fill=Polarity, x=Int.LogRatio.Fin, color=Polarity)) + geom_histogram(alpha=.2, binwidth=5)+ theme(legend.position = "none")
p5 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(Int.X.AccPeak), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1)+ theme(legend.position = "none")
p6 <- ggplot(calibration_data, aes(fill=Polarity, x=MaxDeviationBorder, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.05) + theme(legend.position = "none")
p7 <- ggplot(calibration_data, aes(fill=Polarity, x=abs(AUC), color=Polarity)) + geom_histogram(alpha=.2, binwidth=1) + theme(legend.position = "none")
p8 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.LogRatio, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p9 <- ggplot(calibration_data, aes(fill=Polarity, x=Median.Difference, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
p10 <- ggplot(calibration_data, aes(fill=Polarity, x=X.flips, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
multiplot(p1,p2,p3,p4,p6,p10,cols = 3)
ggplot(calibration_data, aes(fill=Polarity, x=X.flips, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
View(calibration_data)
View(calibration_data)
p10
ggplot(calibration_data, aes(fill=Polarity, x=X.flip, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
ggplot(calibration_data, aes(fill=Polarity, x=X.flips, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
ggplot(calibration_data, aes(fill=Polarity, x=X.flips2, color=Polarity)) + geom_histogram(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
ggplot(calibration_data, aes(fill=Polarity, x=X.flips2, color=Polarity)) + geom_point(alpha=.2, binwidth=.1)+ theme(legend.position = "none")
ggplot(calibration_data, aes(fill=Polarity, x=X.flips2, color=Polarity)) + geom_point(alpha=.2, )+ theme(legend.position = "none")
ggplot(calibration_data, aes(fill=Polarity, x=X.flips2, color=Polarity)) + geom_point(alpha=.2)+ theme(legend.position = "none")
ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxLogRatio)) + geom_point(alpha=.2)+ theme(legend.position = "none")
ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxLogRatio)) + geom_point(alpha=.5)+ theme(legend.position = "none")
ggplot(calibration_data, aes(color=Polarity, x=X.flip2, y=MaxLogRatio)) + geom_point(alpha=.2)+ theme(legend.position = "none")
ggplot(calibration_data, aes(color=Polarity, x=X.flips, y=MaxLogRatio)) + geom_point(alpha=.2)+ theme(legend.position = "none")
multiplot(p,pbis)
p<- ggplot(calibration_data, aes(color=Polarity, x=X.flips, y=MaxLogRatio)) + geom_point(alpha=.6)+ theme(legend.position = "none")
pbis<- ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxLogRatio)) + geom_point(alpha=.6)+ theme(legend.position = "none")
multiplot(p,pbis)
p<- ggplot(calibration_data, aes(color=Polarity, x=X.flips, y=MaxLogRatio)) + geom_point(alpha=.6)+ theme(legend.position = "none")
pbis<- ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxLogRatio)) + geom_point(alpha=.6)+ theme(legend.position = "none")
pbisbis<- ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=MaxLogRatio)) + geom_point(alpha=.6)+ theme(legend.position = "none")
multiplot(p,pbis, pbisbis)
p<- ggplot(calibration_data, aes(color=Polarity, x=X.flips, y=MaxLogRatio)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
pbis<- ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxLogRatio)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
pbisbis<- ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=MaxLogRatio)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
multiplot(p,pbis, pbisbis)
p<- ggplot(calibration_data, aes(color=Polarity, x=X.flips, y=MaxDifference)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
pbis<- ggplot(calibration_data, aes(color=Polarity, x=X.flips2, y=MaxDifference)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
pbisbis<- ggplot(calibration_data, aes(color=Polarity, x=Len.Local.Maxima.X, y=MaxDifference)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
multiplot(p,pbis, pbisbis)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
View(calibration_data)
ggplot(calibration_data, aes(color=Polarity, x=X.flip2, y=MaxLogRatio)) + geom_point(alpha=.2)+ theme(legend.position = "none")
calibration_data$Normalized.positions.X[1]
calibration_data$Normalized.positions.X[1]
calibration_data$Normalized.positions.X[2]
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
calibration_data$Normalized.positions.X[1][1]
calibration_data$Normalized.positions.X[1]
calibration_data$Normalized.positions.X[1][100]
calibration_data$Normalized.positions.X[1][10]
as.data.frame(calibration_data$Normalized.positions.X[1])
r <- as.data.frame(calibration_data$Normalized.positions.X[1])
View(r)
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity)
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into = c(1:100), sep = ",")
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, sep = ",")
View(attempt)
attempt$Normalized.positions.X
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= c(1:101), sep = ",")
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",")
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, 1:101)
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",")
View(attempt)
head(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, "1":"101")
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",")
View(attempt)
attempt$1
attempt
attempt$`1`
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, '1':'101')
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",")
View(attempt)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, 2:102)
View(attempt)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
View(calibration_data)
attempt = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, 2:102)
View(attempt)
normalized_positions = calibration_data %>%
# Select 2 unique subjects
select(Subject, Normalized.positions.X, Polarity) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, 2:102)
ggplot(normalized_positions, aes(color=Polarity, x=time.steps, y=Normalized.positions.X)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
ggplot(normalized_positions, aes(color=Polarity, x=time.step, y=Normalized.positions.X)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
View(normalized_positions)
ggplot(normalized_positions, aes(color=Polarity, x=time.step, y=position)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
ggplot(normalized_positions, aes(color=Polarity, x=time.step, y=position)) + geom_line(alpha=.6)+ theme(legend.position = "none")
ggplot(normalized_positions, aes(color=Polarity, x=time.step, y=abs(position)) + geom_line()+ theme(legend.position = "none")
ggplot(normalized_positions, aes(color=Polarity, x=time.step, y=abs(position))) + geom_line()+ theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='1'), aes(color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
normalized_positions$position
numeric(normalized_positions$position)
is.numeric(normalized_positions$position)
as.numeric(normalized_positions$position)
normalized_positions$position <- as.numeric(normalized_positions$position)
ggplot(subset(normalized_positions, Subject=='1'), aes(color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='1'), aes(color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='1'), aes(group=Subject, color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
View(normalized_positions)
normalized_positions = calibration_data %>%
select(Subject, Normalized.positions.X, Polarity, Expected_response) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(time.step, position, 2:102)
normalized_positions$position <- as.numeric(normalized_positions$position)
ggplot(subset(normalized_positions, Subject=='1'), aes(group=Subject, color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='1'), aes(group=Expected_response, color=Polarity, x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
View(calibration_data)
ggplot(subset(normalized_positions, Subject=='1'), aes(x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none") + facet_grid(Expected_response~Polarity)
subset(normalized_positions, Subject=='1')
ggplot(subset(normalized_positions, Subject=='1' & (Polarity == 'straight' & Expected_response=='true')), aes(x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
View(normalized_positions)
ggplot(subset(normalized_positions, Subject=='0' & (Polarity == 'straight' & Expected_response=='true')), aes(x=time.step, y=abs(position))) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
hola <- subset(normalized_positions, Subject=='0' & Polarity == 'straight')
View(info)
View(hola)
ggplot(subset(normalized_positions, Subject=='0' & (Polarity == 'straight' & Expected_response=='true')), aes(x=time.step, y=position)) + geom_point(alpha=.6, position=position_jitter(width=1,height=.5))+ geom_line() + theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='0' & (Polarity == 'straight' & Expected_response=='true')), aes(x=time.step, y=position)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none")
View(hola)
hola$time.step
normalized_positions$time.step <- as.numeric(normalized_positions$time.step)
ggplot(subset(normalized_positions, Subject=='0' & (Polarity == 'straight' & Expected_response=='true')), aes(x=time.step, y=position)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none")
ggplot(subset(normalized_positions, Subject=='0'), aes(x=time.step, y=position)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Polarity~Expected_response)
ggplot(normalized_positions, aes(x=time.step, y=position, color=Subject, group=Subject)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Polarity~Expected_response)
normalized_positions$Subject <- factor(normalized_positions$Subject)
ggplot(normalized_positions, aes(x=time.step, y=position, color=Subject, group=Subject)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Polarity~Expected_response)
ggplot(normalized_positions, aes(x=time.step, y=position, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Subject~Expected_response)
normalized_positions = calibration_data %>%
select(Subject, Normalized.positions.X, Polarity, Expected_response) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(Time.Step, X.Position, 2:102)
normalized_positions$X.Position <- as.numeric(normalized_positions$X.Position)
normalized_positions$Time.Step <- as.numeric(normalized_positions$Time.Step)
normalized_positions$Subject <- factor(normalized_positions$Subject)
#Plotting subjects
ggplot(normalized_positions, aes(x=Time.Step, y=X.Position, color=Subject, group=Subject)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Polarity~Expected_response)
ggplot(normalized_positions, aes(x=Time.Step, y=X.Position, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Subject~Expected_response)
install.packages("lda")
require(lda)
#LDA
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
#LDA
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
require(lda)
r <- lda::(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
install.packages("MASS")
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
library("lda", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions,
prior = c(1,1,1)/3)
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions)
r
r <- lda(formula = Polarity ~ abs(X.Position)+Time.Step,
data = normalized_positions)
r
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = normalized_positions)
r
ggplot(normalized_positions, aes(x=Time.Step, y=abs(X.Position), color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Subject~Expected_response)
##1. CHARGE PACKAGES
source("R_scripts/packages.R")
## 2. EXTRACTING_DATA
source("R_scripts/extracting_data.R")
ggplot(normalized_positions, aes(x=Time.Step, y=abs(X.Position), color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Subject~Expected_response)
ggplot(normalized_positions, aes(x=Time.Step, y=X.Position, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(Subject~Expected_response)
r <- lda(formula = Polarity ~ X.Position+Time.Step,
data = subset(normalized_positions, Expected_response=='true'))
r
my_data = normalized_positions %>%
filter(Expected_response=='true')%Z%
select(Position.X, Time.Step, Polarity)
my_data = normalized_positions %>%
filter(Expected_response=='true')%>%
select(Position.X, Time.Step, Polarity)
my_data = normalized_positions %>%
filter(Expected_response=='true')%>%
select(X.Position, Time.Step, Polarity)
#LDA
r <- lda(formula = Polarity ~ .,
data = my_data)
r
r$svd
prop = r$svd^2/sum(r$svd^2)
prop
ggplot(my_data, aes(x=Time.Step, y=X.Position, color=Polarity)) + geom_point()
ggplot(my_data, aes(y=Time.Step, x=X.Position, color=Polarity)) + geom_point()
ggplot(my_data, aes(x=Time.Step, y=X.Position, color=Polarity)) + geom_point()
r2 <- lda(formula = Polarity ~ .,
data = my_data, CV=TRUE)
head(r2$class)
my_data$Polarity
View(my_data)
subset(my_data, Polarity == N)
subset(my_data, Polarity == 'N')
normalized_positions = calibration_data %>%
select(Subject, Normalized.positions.X, Polarity, Expected_response) %>%
separate(Normalized.positions.X, into= as.character(c(1:101)), sep = ",") %>%
gather(Time.Step, X.Position, 2:102)
normalized_positions$X.Position <- as.numeric(normalized_positions$X.Position)
normalized_positions$Time.Step <- as.numeric(normalized_positions$Time.Step)
normalized_positions$Subject <- factor(normalized_positions$Subject)
normalized_positions$Polarity <- factor(normalized_positions$Polarity )
my_data = normalized_positions %>%
filter(Expected_response=='true')%>%
select(X.Position, Time.Step, Polarity)
r <- lda(formula = Polarity ~ .,
data = my_data)
r2 <- lda(formula = Polarity ~ .,
data = my_data, CV=TRUE)
head(r2$class)
r2
normalized_positions.means <- ddply(normalized_positions, c("Polarity", "Time.Step", "Expected_response"),
function(normalized_positions.means)c(X.Position.mean=mean(normalized_positions.means$X.Position, na.rm=T), X.Position.se=se(normalized_positions.means$X.Position, na.rm=T)))
View(normalized_positions.means)
ggplot(normalized_positions.means, aes(x=Time.Step, y=X.Position.mean, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = "none") + facet_grid(.~Expected_response)
r
r.LD1
plda <- predict(object=r, newdata = my_data)
plda
dataset = data.frame(Polarity=my_data[,'Polarity'], lda=plda$x)
View(dataset)
View(dataset)
View(dataset)
ggplot2(dataset)+geom_point(aes(lda.LD1, lda.Polarity, colour=Polarity))
ggplot(dataset)+geom_point(aes(lda.LD1, lda.Polarity, colour=Polarity))
plda
plda$x
ggplot(dataset, aes(x=LD1, color=Polarity, group=Polarity)) + geom_point(alpha=.6)
View(dataset)
ggplot(dataset, aes(y=LD1, x=Polarity ,color=Polarity)) + geom_point(alpha=.6)
r
source('~/WebstormProjects/negationMT/R_scripts/trajectories.R', echo=TRUE)
View(my_data)
mydata$Polarity_old <- my_data$Polarity
my_data$Polarity_old <- my_data$Polarity
View(my_data)
my_data$Polarity_old <- my_data$Polarity
my_data$Polarity <- NULL
plda <- predict(object=r, newdata = my_data)
View(my_data)
View(dataset)
View(dataset)
#LDA
my_data = normalized_positions %>%
filter(Expected_response=='true')%>%
select(X.Position, Time.Step, Polarity)
r <- lda(formula = Polarity ~ .,
data = my_data)
r2 <- lda(formula = Polarity ~ .,
data = my_data, CV=TRUE)
my_data$Polarity_old <- my_data$Polarity
my_data$Polarity <- NULL
plda <- predict(object=r, newdata = my_data)
View(dataset)
plda <- predict(object=r, newdata = my_data)
head(plda$class)
