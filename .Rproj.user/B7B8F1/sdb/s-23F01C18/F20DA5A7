{
    "collab_server" : "",
    "contents" : "library(reshape2)\n\n# Data cleaning / management\nrequire(tidyverse)\nrequire(plyr)\nrequire(ggplot2)\n\n#MASS and lmer\nrequire(lme4)\n\n#LDA\n#require(lda)\n\n# Standard error of the mean\nse <- function(x, ...) {\n  n <- length(x)\n  return(sd(x, ...)/sqrt(n))\n}\n\n\n\n\n\n#Multiplot\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  library(grid)\n  \n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n  \n  numPlots = length(plots)\n  \n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n  \n  if (numPlots==1) {\n    print(plots[[1]])\n    \n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n    \n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n      \n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}",
    "created" : 1491899887965.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3859587074",
    "id" : "F20DA5A7",
    "lastKnownWriteTime" : 1491899890,
    "last_content_update" : 1491899890417,
    "path" : "~/WebstormProjects/negationMT/R_scripts/packages.R",
    "project_path" : "R_scripts/packages.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}