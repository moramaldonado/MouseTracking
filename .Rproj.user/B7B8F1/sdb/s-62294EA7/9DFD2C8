{
    "collab_server" : "",
    "contents" : "normalized_positions.plot.Y = calibration_data %>%\n  dplyr::select(Subject,Polarity, Expected_response, Normalized.positions.Y, Item.number) %>%\n  separate(Normalized.positions.Y, into= as.character(c(1:101)), sep = \",\") %>%\n  gather(Time.Step, Y.Position, 4:104) %>%\n  mutate(Y.Position = as.numeric(Y.Position))%>%\n  mutate(Item.number = as.factor(Item.number))\n\nnormalized_positions.plot.X = calibration_data %>%\n  dplyr::select(Subject,Polarity, Expected_response, Normalized.positions.X, Item.number) %>%\n  separate(Normalized.positions.X, into= as.character(c(1:101)), sep = \",\") %>%\n  gather(Time.Step, X.Position, 4:104) %>%\n  mutate(X.Position = as.numeric(X.Position))%>%\n  mutate(Item.number = as.factor(Item.number))\n\nnormalized_positions.plot_raw <- merge(normalized_positions.plot.X,normalized_positions.plot.Y)\nnormalized_positions.plot_false_raw <- normalized_positions.plot_raw%>%\n  filter(Expected_response=='false')\n\nsummary(normalized_positions.plot_raw)\n\n# Taking the negative of false items, to have everything in the same scale\nnormalized_positions.plot_false <- normalized_positions.plot_raw%>%\n  filter(Expected_response=='false')%>%\n  dplyr::mutate_at('X.Position', funs('-'))\n\nnormalized_positions.plot_true = filter(normalized_positions.plot_raw, Expected_response=='true')\nnormalized_positions.plot = bind_rows(normalized_positions.plot_false,normalized_positions.plot_true)\n\nsummary(normalized_positions.plot)\n",
    "created" : 1490800291273.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2847328153",
    "id" : "9DFD2C8",
    "lastKnownWriteTime" : 1490807979,
    "last_content_update" : 1490807979980,
    "path" : "~/WebstormProjects/negationMT/R_scripts/trajectories_before.R",
    "project_path" : "R_scripts/trajectories_before.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}