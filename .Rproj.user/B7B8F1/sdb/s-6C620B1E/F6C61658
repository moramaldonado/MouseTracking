{
    "collab_server" : "",
    "contents" : "\n\n\nnormalized_positions = calibration_data %>%\n  select(Subject, Normalized.positions.X, Polarity, Expected_response) %>%\n  separate(Normalized.positions.X, into= as.character(c(1:101)), sep = \",\") %>%\n  gather(Time.Step, X.Position, 2:102)\nnormalized_positions$X.Position <- as.numeric(normalized_positions$X.Position)\nnormalized_positions$Time.Step <- as.numeric(normalized_positions$Time.Step)\nnormalized_positions$Subject <- factor(normalized_positions$Subject)\nnormalized_positions$Polarity <- factor(normalized_positions$Polarity )\n\ndifferences  = calibration_data %>%\n  select(Subject, Difference, Polarity) %>%\n  separate(Difference, into= as.character(c(1:101)), sep = \",\") %>%\n  gather(Time.Step, Differences, 2:102) \n\ndifferences$Differences <- as.numeric(differences$Differences)\ndifferences$Time.Step <- as.numeric(differences$Time.Step)\ndifferences$Subject <- factor(differences$Subject)\ndifferences$Polarity <- factor(differences$Polarity )\n\n\n\n#Plotting real subjects\nggplot(normalized_positions, aes(x=Time.Step, y=X.Position, color=Subject, group=Subject)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = \"none\") + facet_grid(Polarity~Expected_response) \np1<- ggplot(normalized_positions, aes(x=Time.Step, y=X.Position, color=Polarity, group=Polarity)) + geom_point(alpha=.4, size=1) + theme(legend.position = \"none\") + facet_grid(.~Expected_response) + ggtitle('Trajectory X axis')\np2 <- ggplot(differences, aes(x=Time.Step, y=Differences, color=Polarity, group=Polarity)) + geom_point(alpha=.4, size=1) + theme(legend.position = \"none\") + ggtitle('Difference distance target and alternative')\nmultiplot(p1,p2)\n\n#Plotting real means\nnormalized_positions.means <- ddply(normalized_positions, c(\"Polarity\", \"Time.Step\", \"Expected_response\"),\n                                    function(normalized_positions.means)c(X.Position.mean=mean(normalized_positions.means$X.Position, na.rm=T), X.Position.se=se(normalized_positions.means$X.Position, na.rm=T)))\nggplot(normalized_positions.means, aes(x=Time.Step, y=X.Position.mean, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = \"none\") + facet_grid(.~Expected_response) + \ngeom_errorbar(aes(ymin=X.Position.mean-X.Position.se, ymax=X.Position.mean+X.Position.se), width=.1) \n\n\ndifferences.means <- ddply(differences, c(\"Polarity\", \"Time.Step\"),\n                                    function(differences.means)c(Differences.mean=mean(differences.means$Difference, na.rm=T), Differences.se=se(differences.means$Differences, na.rm=T)))\n\nggplot(differences.means, aes(x=Time.Step, y=Differences.mean, color=Polarity, group=Polarity)) + geom_point(alpha=.6) + geom_line() + theme(legend.position = \"none\") + \n  geom_errorbar(aes(ymin=Differences.mean-Differences.se, ymax=Differences.mean+Differences.se), width=.1) \n\n\n\n\n\n#Normalized positions for fake data\nnormalized_positions.fakedata = calibration_data_new_subjects %>%\n  select(randomID, Normalized.positions.X, Polarity, Expected_response) %>%\n  separate(Normalized.positions.X, into= as.character(c(1:101)), sep = \",\") %>%\n  gather(Time.Step, X.Position, 2:102)\nnormalized_positions.fakedata$X.Position <- as.numeric(normalized_positions.fakedata$X.Position)\nnormalized_positions.fakedata$Time.Step <- as.numeric(normalized_positions.fakedata$Time.Step)\nnormalized_positions.fakedata$Subject <- factor(normalized_positions.fakedata$randomID)\nnormalized_positions.fakedata$Polarity <- factor(normalized_positions.fakedata$Polarity )\n\n\n",
    "created" : 1487167220417.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3937890432",
    "id" : "F6C61658",
    "lastKnownWriteTime" : 1487187129,
    "last_content_update" : 1487187129811,
    "path" : "~/WebstormProjects/negationMT/R_scripts/trajectories.R",
    "project_path" : "R_scripts/trajectories.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}