{
    "collab_server" : "",
    "contents" : "\n#Ordering\nnormalized_positions.plot$X.Position <- as.numeric(normalized_positions.plot$X.Position)\nnormalized_positions.plot$Y.Position <- as.numeric(normalized_positions.plot$Y.Position)\nnormalized_positions.plot$Time.Step <- as.numeric(normalized_positions.plot$Time.Step)\nnormalized_positions.plot$Subject <- factor(normalized_positions.plot$Subject)\nnormalized_positions.plot$Sentence_Type <- factor(normalized_positions.plot$Sentence_Type)\nnormalized_positions.plot$lda_measure_cut <- cut(normalized_positions.plot$lda_measure, 5)\n\n#Taking negative values for false items\nnormalized_positions.plot.false = normalized_positions.plot %>%\n  filter(Truth.value=='False')%>%\n  dplyr::mutate_at('X.Position', funs('-'))\nnormalized_positions.plot.true = normalized_positions.plot %>%\n  filter(Truth.value=='True')\nnormalized_positions.plot <- rbind(normalized_positions.plot.false, normalized_positions.plot.true)\n\n\ntrajectory_subject.X <- aggregate(X.Position~Subject+Sentence_Type+Time.Step+Item.number.cut, data= subset(normalized_positions.plot,Truth.value=='True'), mean, na.rm=T)\nggplot(trajectory_subject.X, aes(y=X.Position, x=Time.Step, group=Subject, color=Sentence_Type)) +\n  geom_point(alpha=.4, size=1) +\n  theme(legend.position = \"none\") + \n  facet_grid(Sentence_Type~Item.number.cut) + ggtitle('Trajectories')\nggsave('real_data_XPosition_Item.png', plot = last_plot(), scale = 1, dpi = 300, width=15, path='real_data/graphs')\n\nnormalized_positions.means <- summarySE(trajectory_subject.X, measurevar=\"X.Position\", groupvars=c(\"Sentence_Type\", \"Time.Step\", 'Item.number.cut'))\nggplot(normalized_positions.means, aes(x=Time.Step, y=X.Position, color=Sentence_Type, group=Sentence_Type))  +\n  geom_line(alpha=.6) + geom_errorbar(aes(ymin=X.Position-se, ymax=X.Position+se), width=.1)+\n  theme(legend.position = \"top\") + facet_grid(.~Item.number.cut) \nggsave('real_data_meanXPosition_Item.png', plot = last_plot(), scale = 1, dpi = 300, width = 10, path='real_data/graphs')\n\n\n#Ploting subject mean x-position per time step\ntrajectory_subject.X <- aggregate(X.Position~Subject+Truth.value+Sentence_Type+Time.Step+lda_measure_cut, data= normalized_positions.plot, mean, na.rm=T)\nggplot(trajectory_subject.X, aes(y=X.Position, x=Time.Step, group=Subject, color=Sentence_Type)) +\ngeom_point(alpha=.4, size=1) +\ntheme(legend.position = \"none\") + \nfacet_grid(lda_measure_cut~Truth.value+Sentence_Type) + ggtitle('Trajectories')\nggsave('real_data_XPosition.png', plot = last_plot(), scale = 1, dpi = 300, width=15, path='real_data/graphs')\n\n#Plotting mean x-position per time step  \nnormalized_positions.means <- summarySE(trajectory_subject.X, measurevar=\"X.Position\", groupvars=c(\"Sentence_Type\", \"Time.Step\", \"Truth.value\", 'lda_measure_cut'))\nggplot(normalized_positions.means, aes(x=Time.Step, y=X.Position, color=Sentence_Type, group=Sentence_Type))  +\ngeom_line(alpha=.6) + geom_errorbar(aes(ymin=X.Position-se, ymax=X.Position+se), width=.1)+\ntheme(legend.position = \"top\") + facet_grid(Truth.value~lda_measure_cut) \nggsave('real_data_meanXPosition.png', plot = last_plot(), scale = 1, dpi = 300, width = 10, path='real_data/graphs')\n\n#Plotting good trajectory aggregated by subject, truth value, sentence and lda_measure\ntrajectory_subject.X <- aggregate(X.Position~Subject+Truth.value+Sentence_Type+Time.Step+lda_measure_cut, data= normalized_positions.plot, mean, na.rm=T)\ntrajectory_subject.Y <- aggregate(Y.Position~Subject+Truth.value+Sentence_Type+Time.Step+lda_measure_cut, data= normalized_positions.plot, mean, na.rm=T)\ntrajectory_subject <- merge(trajectory_subject.X,trajectory_subject.Y) \nggplot(trajectory_subject, aes(x=X.Position, y=Y.Position, color=Sentence_Type, group=Subject)) +geom_point(alpha=.4, size=.5) + theme(legend.position = \"none\") + facet_grid(Truth.value~lda_measure_cut) \nggsave('real_data_trajectories.png', plot = last_plot(), scale = 1, dpi = 300, width=10, path='real_data/graphs')\n\nnormalized_positions.means.traj <- ddply(trajectory_subject, c(\"Sentence_Type\", \"Time.Step\", \"Truth.value\",\"lda_measure_cut\"),\n                                         function(normalized_positions.means)c(X.Position.mean=mean(normalized_positions.means$X.Position, na.rm=T), \n                                                                               se=se(normalized_positions.means$X.Position, na.rm=T),\n                                                                               Y.Position.mean=mean(normalized_positions.means$Y.Position, na.rm=T)))\n\nggplot(normalized_positions.means.traj, aes(y=Y.Position.mean, x=X.Position.mean, color=Sentence_Type)) +geom_point(alpha=.4, size=2) + theme(legend.position = \"top\") + facet_grid(Truth.value~lda_measure_cut)\nggsave('real_data_mean_trajectories.png', plot = last_plot(), scale = 1, dpi = 300, width=10, path='real_data/graphs')\n\n\n#ALL TOGETHER\n\n\n\n\n",
    "created" : 1492248057527.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "327327542",
    "id" : "64CB5897",
    "lastKnownWriteTime" : 1492251086,
    "last_content_update" : 1492251086554,
    "path" : "~/WebstormProjects/negationMT/real_data/trajectories.R",
    "project_path" : "real_data/trajectories.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}