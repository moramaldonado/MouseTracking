{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Analysis Mouse Tracking and Scope (STATS Seance)\"\nauthor: \"Mora Maldonado\"\ndate: \"22 Apr 2015\"\noutput: html_document\n---\n\nCheck webside alex\n\n\n**Summary of the experiment**\n\nThis experiment has as a main goal to understand the way in which we process scope ambiguous sentences. Therefore, we will propose two main questions:\n\n1.  Is one of the readings more difficult to process than the other? (Derived faster? Preferred?)\n2.\tIs the derivation of one reading dependent of the other one? (Two-step?) \n\nWe developed a mouse tracking experiment where participants have to decide whether a picture makes a sentence true or false. In critical cases, the sentence is ambiguous between two readings and each of the options (true/false) reflects the accessing to one particular reading of the sentence. On top of reaction times and accessing (n?? of TRUE responses), we will look at the attraction that each options has in mouse patterns for one particular condition. In order to address this last point, we compute several measurements (deviation from the ideal trajectory, ratio of distances to each option, difference of distances to each option, acceleration, etc.). [Note: As we will see here, one remaining doubt is which measure is better. I did all the analyses based on Ratio measurements for the sake of simplicity]\n \nRegarding the design, for target trials we have 2 conditions (surface/inverse), 2 quantifier combinations (Every-A, A-Every) and 3 predicates (above, below and connected to).\n\nWe included fillers (where the image makes the sentence false) and controls, in order to check that the mouse tracking measure was working. These controls are negative and affirmative sentences. Previous studies (Dale and Duran 2010) found that the derivation of true negative sentences involved a deviation in mouse paths, suggesting that positive states have be derived in order to get negative meanings. \n\nControls were made with the same images used for targets and fillers. \n\n\n\n\n**Requirements**\n```{r}\n#package requirements\nrequire(reshape2)\nrequire(plyr)\nrequire(sciplot)\nrequire(ggplot2)\nrequire(grid)\nrequire(lattice)\nrequire(lme4) \n\n#charging functions\ncorstarsl <- function(x){ \nrequire(Hmisc) \nx <- as.matrix(x) \nR <- rcorr(x)$r \np <- rcorr(x)$P \n\n## define notions for significance levels; spacing is important.\nmystars <- ifelse(p < .001, \"***\", ifelse(p < .01, \"** \", ifelse(p < .05, \"* \", \" \")))\n\n## trunctuate the matrix that holds the correlations to two decimal\nR <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1] \n\n## build a new matrix that includes the correlations with their apropriate stars \nRnew <- matrix(paste(R, mystars, sep=\"\"), ncol=ncol(x)) \ndiag(Rnew) <- paste(diag(R), \" \", sep=\"\") \nrownames(Rnew) <- colnames(x) \ncolnames(Rnew) <- paste(colnames(x), \"\", sep=\"\") \n\n## remove upper triangle\nRnew <- as.matrix(Rnew)\nRnew[upper.tri(Rnew, diag = TRUE)] <- \"\"\nRnew <- as.data.frame(Rnew) \n\n## remove last column and return the matrix (which is now a data frame)\nRnew <- cbind(Rnew[1:length(Rnew)-1])\nreturn(Rnew) \n}\n\n````\n\n**Charging and ordering data**\n```{r}\n#set working directory\ngetwd()\n#charging tha data.... \n#information file\nInfo.Scope <- read.csv(file=\"Information_scope.csv\", header=TRUE, sep=\",\")\n\n#data file\nData.Scope <- read.csv(file=\"Data_Scope.csv\", header=TRUE, sep=\",\")\n\n#some small organization...\nlevels(Data.Scope$Quantifier) <- c('A-Every', 'Every-A')\n\nfor (i in levels(factor(Data.Scope$Subject)))\n  {Data.Scope$Item[Data.Scope$Subject == i] <- c(1:244)}\n\nData.Scope$Type[Data.Scope$Sentence_Type=='starget' & Data.Scope$Truth.value == 'True'] <- 'target'\nData.Scope$Type[Data.Scope$Sentence_Type=='starget' & Data.Scope$Truth.value == 'False'] <- 'filler'\nData.Scope$Type[Data.Scope$Sentence_Type=='controlp' |  Data.Scope$Sentence_Type=='controln'] <- 'control'\n\n#Exploring the data\n#How many missing values do we have?\nsummary1 <- ddply(Data.Scope, c('Subject','Response'), summarise,\n               Count.Responses = length(Response),\n               Na.values    = sum(is.na(AccPeak)),\n               Mean.Accuracy = mean(Accuracy)\n               )\n\nprint(summary1)\n\n```\n\n*Exclusion criteria*\n\n```{r}\n\n#Criteria of exclusion: Having a touch screen (NOT USING NOW)\nmouse_exclusion <- Info.Scope$Subject[Info.Scope$Touch == 'True' &  Info.Scope$Clicker != 'mouse'] \n\n#Criteria of exclusion: Having a touch screen (NOT USING NOW)\nlefthanded <- Info.Scope$Subject[Info.Scope$Handeness == 'left'] \n\n#Criteria of exclusion ACCURACY: <70% accuracy in controls\naccuracy_per_subject_controls <- aggregate(Accuracy~Subject, data= subset(Data.Scope, Sentence_Type=='controlp' | Sentence_Type == 'controln'), mean, na.rm=T)\n\naccuracy_exclusion <- accuracy_per_subject_controls$Subject[accuracy_per_subject_controls$Accuracy < 0.7] \n\n#Criteria of exclusion RTs: +/- 2sd of mean\n\n#First exclusion \n\n#log response times and take out first constraint\n\nData.Scope <- subset(Data.Scope, RT > 100)\nrt_per_subject <- aggregate(RT~Subject, data=Data.Scope, mean, na.rm=T)\n\n\nexclusion_RT <- c(mean(Data.Scope$RT)-2*sd(Data.Scope$RT), mean(Data.Scope$RT)+2*sd(Data.Scope$RT) )\nprint(exclusion_RT)\nexcluded_trials <- subset(Data.Scope, RT < exclusion_RT[1] | RT > exclusion_RT[2]) #Maybe not the right thing to do\nprint(nrow(excluded_trials))\n\nData.Scope <- subset(Data.Scope, exclusion_RT[1] & RT < exclusion_RT[2]) #Maybe not the right thing to do\nAccurate.Trials <- subset(Data.Scope, Accuracy == 1) #I am looking only cases where the people access to relevant reading\n\n#RT along the experiment (TRIAL EXCLUSION)\nRT_across <- ggplot(subset(Accurate.Trials,Type=='control'), aes(x=Item, y=RT, color=Sentence_Type)) + geom_point(shape=1) + ggtitle (\"RTs across the experiment\") +\n    scale_colour_hue(l=50) + \n    geom_smooth(method=lm,   \n                se=FALSE,    \n                fullrange=TRUE) \nRT_across + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: RT across experiment.jpg\", dpi = 300,  width = 13, height = 7)\n\n#restrict analyses \nBADSUBJECTS <- c(accuracy_exclusion, mouse_exclusion)\nprint(BADSUBJECTS)\nData.Scope <- subset(Data.Scope, !(Subject %in% BADSUBJECTS))\nAccurate.Trials <- subset(Accurate.Trials,!(Subject %in% BADSUBJECTS))\n\n```\n\n**Checking controls for RT and accuracy**\n```{r}\n# checking if everything goes well with fillers and controls... (they should have higher accuracy rates)\naccuracy_per_subject <- aggregate(Accuracy~Subject+Type+Sentence_Type, data= subset(Data.Scope, Type=='control'|Type=='filler'), mean, na.rm=T)\n\naccuracy_overall <- ddply(accuracy_per_subject, c(\"Type\", \"Sentence_Type\"), \n            function(accuracy_overall)c(response=mean(accuracy_overall$Accuracy, na.rm=T), se=se(accuracy_overall$Accuracy, na.rm=T)))\n\n#plot accuracy\naccuracy_overall_plot <- ggplot(accuracy_overall, aes(x=Type, y=response, fill=Sentence_Type)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Accuracy controls and fillers\") + \n      xlab('Condition')  +\n      ylab('Mean ACCURATE responses') +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\naccuracy_overall_plot  + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope:Accuracy controls and fillers.png\", dpi = 300,  width = 13, height = 7)\n\n#RTs in controls \nbp <- ggplot(subset(Accurate.Trials, Type=='control'), aes(x=Sentence_Type, y=RT, fill=Sentence_Type)) + geom_boxplot() +ggtitle(\"RT\")\n\nbp + facet_grid(.~ Truth.value) + theme(strip.text.y = element_text(size=13, face=\"bold\"), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\"))\n\nggsave(filename = \"Scope: RTs controls.png\", dpi = 300,  width = 13, height = 7)\n\n```\n\n\n**Analysis for targets**\n*1st dependent variable: ACCESSING TO READINGS (True responses)*\n\n1 - Are target conditions different than controls (similar pictures, different sentences) in access?\n\n```{r}\naccess_per_subject_controls <- aggregate(Accuracy~Subject+Type+Condition, data= subset(Data.Scope, Type=='target' | Type =='control' & Truth.value == 'True'), mean, na.rm=T)\n\naccess_overall <- ddply(access_per_subject_controls, c(\"Condition\", \"Type\"), \n            function(access_overall)c(response=mean(access_overall$Accuracy, na.rm=T), se=se(access_overall$Accuracy, na.rm=T)))\n\n#plot accessing\naccess_overall_plot <- ggplot(access_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Access to reading: Targets vs. Controls\")+ \n      xlab('Condition')  +\n      ylab('Mean TRUE responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\naccess_overall_plot + facet_grid(.~ Type) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: Access Targets vs Controls.png\", dpi = 300,  width = 13, height = 7)\n\n# STATS?\n# Expectations: No difference between controls, difference between targets, interaction between controls and targets (surface controls = surface targets, inverse controls != inverse targets) -> Conclusion: The image nor the sentence is influencing in the accessing but the particular combination.\n\ndata <- subset(Data.Scope, Type=='target' | Type =='control' & Truth.value == 'True')\n\n#I use random intercepts per subject and item and random slopes per subject (influence of the condition in each subject). I test the interaction between condition and type. Not sure about the slope for items. \n\naccuracy_model <- lmer(Accuracy ~ Condition*Type + (1+Condition*Type|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(accuracy_model)\n\n#likelihood test with null model\nnull_accuracy_model <- lmer(Accuracy ~ Condition + Type + (1+Condition*Type|Subject) + (1|Item), data = data, REML=FALSE)\nprint(anova(accuracy_model, null_accuracy_model))\n\n````\n\n2- Are target conditions different for each quantifier combination?\nPrediction: Interaction between Conditions and Quantifiers\n```{r}\naccess_per_subject_quantifier <- aggregate(Accuracy~Subject+Condition+Quantifier, data= subset(Data.Scope, Type=='target'), mean, na.rm=T)\n\nnewdata <- access_per_subject_quantifier[order(access_per_subject_quantifier$Subject),] \n#accessing to targets overall\naccess_quantifier_overall <- ddply(access_per_subject_quantifier, c(\"Condition\", \"Quantifier\"), function(access_quantifier_overall)c(response=mean(access_quantifier_overall$Accuracy, na.rm=T), se=se(access_quantifier_overall$Accuracy, na.rm=T)))\n\n#plot accessing\naccess_quantifier_overall_plot <- ggplot(access_quantifier_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Access to reading per quantifier\")+ \n      xlab('Condition')  +\n      ylab('Mean TRUE responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\naccess_quantifier_overall_plot + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: Access in targets per Quantifier.png\",dpi = 300,  width = 13, height = 7)\n\n############# STATS ############\n# expectations: interaction between conditions and quantifier combination\n\ndata <- subset(Data.Scope, Type=='target')\n\naccuracy_model <- lmer(Accuracy ~ Condition*Quantifier + (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(accuracy_model)\n\n#likelihood test with null model\nnull_accuracy_model <- lmer(Accuracy ~ Condition + Quantifier + (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE) #the value of intercept is not exactly the same as the one in my aggregate function, why?\nprint(anova(accuracy_model, null_accuracy_model))\n````\n\n3- Are target conditions different for each predicate?\nPrediction: No interaction between conditions and predicates. \n```{r}\naccess_per_subject_predicate <- aggregate(Accuracy~Subject+Condition+Predicate, data= subset(Data.Scope, Type=='target'), mean, na.rm=T)\n\n#accessing to targets overall\naccess_predicate_overall <- ddply(access_per_subject_predicate, c(\"Condition\", \"Predicate\"), function(access_predicate_overall)c(response=mean(access_predicate_overall$Accuracy, na.rm=T), se=se(access_predicate_overall$Accuracy, na.rm=T)))\n\n#plot accessing\nAccess_Predicate_plot <- ggplot(access_predicate_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Access to reading per predicate\")+ \n      xlab('Condition')  +\n      ylab('Mean TRUE responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nAccess_Predicate_plot + facet_grid(.~ Predicate) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: Access in targets per Predicate.png\",dpi = 300,  width = 13, height = 7)\n\n\n############# STATS ############\n# expectations: NO interaction between conditions and predicate\n\ndata <- subset(Data.Scope, Type=='target')\n\naccuracy_model <- lmer(Accuracy ~ Condition*Predicate + (1+Condition*Predicate|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(accuracy_model)\n\n#likelihood test with null model\nnull_accuracy_model <- lmer(Accuracy ~ Condition + Predicate + (1+Condition*Predicate|Subject) + (1|Item), data = data, REML=FALSE) #the value of intercept is not exactly the same as the one in my aggregate function, why?\nprint(anova(accuracy_model, null_accuracy_model))\n\n```\n\n\n*Variability btw subjects*\n```{r}\ndata <- access_per_subject_quantifier\ndotplot(Accuracy ~ Condition|Quantifier, data = data, groups = Subject, main= \"Variation\", type = c(\"p\", \"a\"), jitter.x = TRUE,  auto.key = list(title = \"Subject\", cex = 0.8, cex.title = 1, columns = 6))\n\n# Density plots\n#ggplot(subset(Accurate.Trials, Type=='control'), aes(x=MaxLogRatio, colour=Sentence_Type)) + geom_density()\n\n```\n\n\n*2nd dependent variable: REACTION TIMES*\n\nAre RT different when people access to different target conditions? Is there an interaction with quantifier combination?\n\n\n```{r}\n\n#log response times \n\nrt_per_subject <- aggregate(RT~Subject+Condition+Quantifier, data= subset(Accurate.Trials, Type == 'target'),mean, na.rm=T)\n\nbp <- ggplot(rt_per_subject, aes(x=Condition, y=RT, fill=Condition)) + geom_boxplot() +ggtitle(\"Response times in accurate targets\")\nbp + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"RT in accurate targets.jpg\", dpi = 300,  width = 13, height = 7)\n\n# stats\n\n# expectations: similar direction as accessing, we expect an interaction of quantifier x condition in RTs\ndata <- subset(Accurate.Trials, Type=='target')\ndata$LogRT <- log(data$RT)\n\n#Main effect of condition\nrt_model <- lmer(RT ~ Condition + (1+Condition|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(rt_model)\n\n#likelihood test with null model\nnull_rt_model <- lmer(RT ~ 1 + (1+Condition|Subject) + (1|Item), data = data, REML=FALSE) #the value of intercept is not exactly the same as the one in my aggregate function, why?\nprint(anova(rt_model, null_rt_model))\n\n#Interaction of quantifier\nsum\n\n#likelihood test with null model\nnull_rt_model <- lmer(RT ~ Condition + Quantifier + (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE) #the value of intercept is not exactly the same as the one in my aggregate function, why?\nprint(anova(rt_model, null_rt_model))\n\n```\n\n*3rd dependent variable: MOUSE-TRACKING INFORMATION*\n\n**controls**\n```{r}\n\n### 1- Time of Acceleration peak (Acceleration peaks are considered to appear after decision points. Here, the time at which the last acceleration peak appears)\n\nAccPeak.Time_subject <- aggregate(AccPeak.Time~Subject+Truth.value+Sentence_Type, data= subset(Accurate.Trials, Type=='control'), mean, na.rm=T)\n\nAccPeak.Time <- ddply(AccPeak.Time_subject, c(\"Sentence_Type\", \"Truth.value\"), \n            function(AccPeak.Time)c(response=mean(AccPeak.Time$AccPeak.Time, na.rm=T), se=se(AccPeak.Time$AccPeak.Time, na.rm=T)))\n\nAccPeak.Time_plot <- ggplot(AccPeak.Time, aes(x=Sentence_Type, y=response, fill=Sentence_Type)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"AccPeak.Time (Time of AccPeak) \")+ \n      xlab('Condition')  +\n      ylab('AccPeak')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nAccPeak.Time_plot + facet_grid(.~ Truth.value) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: AccPeak.Time in controls.jpg\", dpi = 300,  width = 13, height = 7)\n\n\n### 2-  MaxLogRatio (Value that maximises the ratio between the distance to the target button (TRUE) and the distance to the alternative button (FALSE), in log units.)\n\nMaxLogRatio_subject <- aggregate(MaxLogRatio~Subject+Truth.value+Sentence_Type, data= subset(Accurate.Trials, Type=='control'), mean, na.rm=T)\n\nMaxLogRatio_overall <- ddply(MaxLogRatio_subject, c(\"Sentence_Type\", \"Truth.value\"), \n            function(MaxLogRatio_overall)c(response=mean(MaxLogRatio_overall$MaxLogRatio, na.rm=T), se=se(MaxLogRatio_overall$MaxLogRatio, na.rm=T)))\n\nMaxLogRatio_plot <- ggplot(MaxLogRatio_overall, aes(x=Sentence_Type, y=response, fill=Sentence_Type)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"MaxLogRatio (Distance Target/Distance Alternative) \")+ \n      xlab('Sentence_Type')  +\n      ylab('MaxLogRatio')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nMaxLogRatio_plot + facet_grid(.~ Truth.value) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: MaxLogRatio in controls.jpg\", dpi = 300,  width = 13, height = 7)\n\n\n########## STATS #############\n# expectations: Replication of Dale and Duran 2010. ControlN-TRUE > ControlP-TRUE in MaxLogRatio (meaning: higher deviation towards the unselected alternative in negated sentences)\n\ndata <- subset(Accurate.Trials, Type=='control' & Truth.value == 'True') \n\nMaxLogRatio_controls_model <- lmer(MaxLogRatio ~ Sentence_Type + (1+Sentence_Type|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(MaxLogRatio_controls_model)\n#likelihood test with null model\nnull_MaxLogRatio_controls_model <-lmer(MaxLogRatio ~ 1+ (1+Sentence_Type|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(MaxLogRatio_controls_model, null_MaxLogRatio_controls_model))\n\n\n#### 3 - Int LogRatio in AccPeak (Area under LogRatio curve between time 0 and time of last accuracy peak. This is a complementary measure to MaxLogRatio, that accounts for the uncertainty.)\n\nInt.LogRatio.AccPeak_subject<- aggregate(Int.LogRatio.AccPeak~Subject+Sentence_Type+Truth.value, data= subset(Accurate.Trials, Type=='control'), mean, na.rm=T)\n\nInt.LogRatio.AccPeak <- ddply(Int.LogRatio.AccPeak_subject, c(\"Sentence_Type\", \"Truth.value\"), function(Int.LogRatio.AccPeak)c(response=mean(Int.LogRatio.AccPeak$Int.LogRatio.AccPeak, na.rm=T), se=se(Int.LogRatio.AccPeak$Int.LogRatio.AccPeak, na.rm=T)))\n\nInt.LogRatio.AccPeak_plot <- ggplot(Int.LogRatio.AccPeak, aes(x=Sentence_Type, y=response, fill=Sentence_Type)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Int LogRatio in AccPeak in Controls\")+ \n      xlab('Condition')  +\n      ylab('Int.LogRatio.AccPeak')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nInt.LogRatio.AccPeak_plot + facet_grid(.~ Truth.value) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Int.LogRatio.AccPeak in controls.jpg\",  dpi = 300,  width = 13, height = 7)\n\n# stats\n#Expectations: Similar results as the ones obtained in MaxLogRatio (this will reinforce the idea that is not uncertainty but actual deviation)\n\ndata <- subset(Accurate.Trials, Type=='control' & Truth.value == 'True')\n\nInt.LogRatio_controls_model <- lmer(Int.LogRatio.AccPeak ~ Sentence_Type + (1+Sentence_Type|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(Int.LogRatio_controls_model )\n\n#likelihood test with null model\nnull_Int.MaxLogRatio_controls_model <-lmer(Int.LogRatio.AccPeak ~ 1+ (1+Sentence_Type|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(Int.LogRatio_controls_model , null_Int.MaxLogRatio_controls_model))\n\n```\n\n**targets**\n\n*Max LogRatio of distance between target and alternative (target/alternative)*\nExpectations: Higher MaxLogRatio for Inverse condition (Main effect of condition) + Interaction with the quantifier combination (A-Every > Every-A)\n\n```{r}\nMaxLogRatio_subject <- aggregate(MaxLogRatio~Subject+Condition+Quantifier, data= subset(Accurate.Trials, Type=='target'), mean, na.rm=T)\n\nMaxLogRatio_overall <- ddply(MaxLogRatio_subject, c(\"Condition\", \"Quantifier\"), \n            function(MaxLogRatio_overall)c(response=mean(MaxLogRatio_overall$MaxLogRatio, na.rm=T), se=se(MaxLogRatio_overall$MaxLogRatio, na.rm=T)))\n\nMaxLogRatio_plot <- ggplot(MaxLogRatio_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"MaxLogRatio (Distance Target/Distance Alternative) \")+ \n      xlab('Condition')  +\n      ylab('MaxLogRatio')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nMaxLogRatio_plot + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: MaxLogRatio in targets.jpg\", dpi = 300,  width = 13, height = 7)\n\n\n### MaxLogRatio.Time\nMaxRatio.Time_subject <- aggregate(MaxRatio.Time~Subject+Condition+Quantifier, data= subset(Accurate.Trials, Type=='target'), mean, na.rm=T)\n\nMaxRatio.Time <- ddply(MaxRatio.Time_subject, c(\"Condition\", \"Quantifier\"), \n            function(MaxRatio.Time)c(response=mean(MaxRatio.Time$MaxRatio.Time, na.rm=T), se=se(MaxRatio.Time$MaxRatio.Time, na.rm=T)))\n\n\nmaxRatio.Time_plot <- ggplot(MaxRatio.Time, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"MaxRatio.Time (Time of MaxRatio) \")+ \n      xlab('Condition')  +\n      ylab('maxRatio')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nmaxRatio.Time_plot + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: MaxRatio.Time in targets.jpg\", dpi = 300,  width = 13, height = 7)\n\n\n########## STATS #############\ndata <- subset(Accurate.Trials, Type=='target') \n\n#Main effect of condition\nMaxLogRatio_model <- lmer(MaxLogRatio ~ Condition + (1+Condition|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(MaxLogRatio_model)\n#likelihood test with null model\nnull_MaxLogRatio_model <-lmer(MaxLogRatio ~ 1 +  (1+Condition|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(MaxLogRatio_model, null_MaxLogRatio_model))\n\n#Interaction with Quantifiers\nMaxLogRatio_model <- lmer(MaxLogRatio ~ Condition + (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(MaxLogRatio_model)\n#likelihood test with null model\nnull_MaxLogRatio_model <-lmer(MaxLogRatio ~ Condition + Quantifier+ (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(MaxLogRatio_model, null_MaxLogRatio_model))\n\n```\n\n*Int LogRatio-dAccPeak*\nExpectations: Higher Int.LogRatio.AccPeak for Inverse condition (Main effect of condition) + Interaction with the quantifier combination (A-Every > Every-A)\n\n```{r}\nInt.LogRatio.AccPeak_subject<- aggregate(Int.LogRatio.AccPeak~Subject+Condition+Quantifier, data= subset(Accurate.Trials, Type=='target'), mean, na.rm=T)\n\nInt.LogRatio.AccPeak <- ddply(Int.LogRatio.AccPeak_subject, c(\"Condition\", \"Quantifier\"), function(Int.LogRatio.AccPeak)c(response=mean(Int.LogRatio.AccPeak$Int.LogRatio.AccPeak, na.rm=T), se=se(Int.LogRatio.AccPeak$Int.LogRatio.AccPeak, na.rm=T)))\n\n\nInt.LogRatio.AccPeak_plot <- ggplot(Int.LogRatio.AccPeak, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Int LogRatio dAccPeak\")+ \n      xlab('Condition')  +\n      ylab('Int.LogRatio.AccPeak')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nInt.LogRatio.AccPeak_plot + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: Int.LogRatio.AccPeak in targets.jpg\", dpi = 300,  width = 13, height = 7)\n\n\n########## STATS #############\ndata <- subset(Accurate.Trials, Type=='target') \n\n#Main effect of condition\nInt.LogRatio.AccPeak_model <- lmer(Int.LogRatio.AccPeak ~ Condition + (1+Condition|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(MaxLogRatio_model)\n#likelihood test with null model\nnull_Int.LogRatio.AccPeak_model <-lmer(Int.LogRatio.AccPeak ~ 1 +  (1+Condition|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(Int.LogRatio.AccPeak_model, null_Int.LogRatio.AccPeak_model))\n\n#Interaction with Quantifiers\nInt.LogRatio.AccPeak_model <- lmer(Int.LogRatio.AccPeak ~ Condition + (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE)\nsummary(MaxLogRatio_model)\n#likelihood test with null model\nnull_Int.LogRatio.AccPeak_model <-lmer(Int.LogRatio.AccPeak ~ Condition + Quantifier+ (1+Condition*Quantifier|Subject) + (1|Item), data = data, REML=FALSE) \nprint(anova(Int.LogRatio.AccPeak_model, null_Int.LogRatio.AccPeak_model))\n\n```\n\n**Acceleration peak (generally = last decision point)**\nExpectation: If the derivation involves a deviation, we will expected later acceleration peaks for the same conditions that had higher MaxLogRatio and Int.LogRatio...\n\n```{r}\n#Time of Acceleration peak\n\nAccPeak.Time_subject <- aggregate(AccPeak.Time~Subject+Condition+Quantifier, data= subset(Accurate.Trials, Type=='target'), mean, na.rm=T)\n\nAccPeak.Time <- ddply(AccPeak.Time_subject, c(\"Condition\", \"Quantifier\"), \n            function(AccPeak.Time)c(response=mean(AccPeak.Time$AccPeak.Time, na.rm=T), se=se(AccPeak.Time$AccPeak.Time, na.rm=T)))\n\nAccPeak.Time_plot <- ggplot(AccPeak.Time, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"AccPeak.Time (Time of AccPeak) \")+ \n      xlab('Condition')  +\n      ylab('AccPeak')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nAccPeak.Time_plot + facet_grid(.~ Quantifier) + theme(plot.title = element_text(size = rel(1.4), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Scope: AccPeak.Time in targets.jpg\", dpi = 300,  width = 13, height = 7)\n\n```\n\n**Measuring priming in targets**\nInfluence of previous trial in the derivation and accessing? \n```{r}\nPrevious <- subset(Data.Scope, Previous.accuracy == 1)\n\nPriming_Accuracy_subject <- aggregate(Accuracy~Subject+Condition+Previous.condition, data= subset(Previous, Type == 'target') ,mean, na.rm=T) \n\naccuracy_overall <- ddply(Priming_Accuracy_subject, c(\"Condition\", \"Previous.condition\"), \n            function(accuracy_overall)c(response=mean(accuracy_overall$Accuracy, na.rm=T), se=se(accuracy_overall$Accuracy, na.rm=T)))\n\nPriming_Accuracy_plot <- ggplot(accuracy_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Access after priming?\")+ \n      xlab('Condition')  +\n      ylab('Mean of TRUE responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nPriming_Accuracy_plot + facet_grid(.~ Previous.condition) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Priming accessing in targets.png\", dpi = 300,  width = 13, height = 7)\n\nPriming_MaxLogRatio_subject <- aggregate(MaxLogRatio~Subject+Condition+Previous.condition, data= subset(Previous, Type == 'target'& Accuracy==1) ,mean, na.rm=T) \n\nMaxLogRatio_overall <- ddply(Priming_MaxLogRatio_subject, c(\"Condition\", \"Previous.condition\"), \n            function(MaxLogRatio_overall)c(response=mean(MaxLogRatio_overall$MaxLogRatio, na.rm=T), se=se(MaxLogRatio_overall$MaxLogRatio, na.rm=T)))\n\nPriming_MaxLogRatio_plot <- ggplot(MaxLogRatio_overall, aes(x=Condition, y=response, fill=Condition)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"MaxRatio after priming?\")+ \n      xlab('Condition')  +\n      ylab('Ratio')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nPriming_MaxLogRatio_plot + facet_grid(.~ Previous.condition) + theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\nggsave(filename = \"Priming Ratio in targets.png\", dpi = 300,  width = 13, height = 7)\n\n```\n\n\n**How to choose measurements? See correlations across the experiment**\n```{r}\ndata <- subset(Accurate.Trials, Type=='control')\ncorrelations <- corstarsl(data[,c(11,18)])\nprint(correlations)\n\n#SEE some correlations clearly\nlibrary(car)\nscatterplotMatrix(~MaxLogRatio+MaxDifference+MaxDeviation, data=subset(Accurate.Trials, Type == 'target'),\n    main=\"Correlations of measures\")\n\n\n#Model to test different relations\nname <- 'MaxLogRatio'\nAcross <- ggplot(subset(Accurate.Trials,Type=='target'), aes(x=MaxLogRatio, y= Int.LogRatio.AccPeak, color= Condition)) + geom_point(shape=1) + ggtitle (name) +\n    scale_colour_hue(l=50) + # Use a slightly darker palette than normal\n    geom_smooth(method=lm,   # Add linear regression lines\n                se=FALSE,    # Don't add shaded confidence region\n                \n                fullrange=TRUE) # Extend regression lines\n\nAcross + facet_grid(.~ Quantifier)+ theme(plot.title = element_text(size = rel(1.6), face='bold', family=\"Tahoma\", vjust=1.5), legend.background = element_rect(colour = \"black\"), axis.text.x=element_text(size=12, vjust=0.5), axis.text.y=element_text(size=12, vjust=0.5), axis.title.y = element_text(size=14, vjust=0.5), axis.title.x = element_text(size=14, vjust=.3), legend.title = element_text(size=12, face=\"bold\"), legend.text = element_text(size = 12), legend.position=\"top\", strip.text.x = element_text(size=12, face=\"bold\")) \n\n```\n\n\n\n\n\n",
    "created" : 1485186125186.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3812313403",
    "id" : "7E0E137C",
    "lastKnownWriteTime" : 1430860720,
    "last_content_update" : 1430860720,
    "path" : "~/Dropbox/Stage/M2/Seance Stats/Analysis_MTScope.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}