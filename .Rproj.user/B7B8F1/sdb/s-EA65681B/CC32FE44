{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Analyses Experiments 1-5\"\nauthor: \"Mora Maldonado\"\ndate: \"September 2016\"\noutput: \n  html_document: \n    highlight: tango\n    theme: readable\n    toc: yes\n    toc_float: true\n---\n\n#Summary\n##Experiments\n* Experiment 1 = Between predicates.\n* Experiment 2 = Replication of Chemla and Bott. \n* Experiment 3 = Replication of Chemla and Bott with simpler imagges.\n* Experiment 4 = Between quantifiers with simpler images ('each' in primes, 'every' in targets)\n* Experiment 5 = Between predicates with simpler images.\n\n##Design\n1. Prime configuration:\n  + U-Narrow\n  + U-Wide\n2. Sentence Type Prime:  \n  + Existential-Universal (There is a X PRED to every Y) \n  + Universal - Existential (Every Y PRED to a X)\n3. Sentence Type Target:  \n  + Existential-Universal (There is a X PRED to every Y) \n  + Universal - Existential (Every Y PREd to a X)\n4. Predicate_prime (Exp3: above/below, Exp4:above/below, Exp5:left-right/next) \n5. Quantifier_prime (Exp3: every, Exp4:each, Exp5:every)\n\nDesign: 4^2 x 4 repetitions = 64 prime-target trials ( + 64 controls)\n\n> Question: Is the verification strategy being primed or the specific semantic representation?\n\n\n```{r echo=FALSE,results='hide',message=FALSE, warning=FALSE}\nrequire(sciplot)\nrequire(ggplot2)\nrequire(grid)\nrequire(plyr)\nrequire(lme4)\nrequire(knitr)\nrequire(dplyr)\nrequire(languageR)\nrequire(RePsychLing)\n```\n\n#Charging data\n```{r echo=FALSE, results='hide', ,message=FALSE, warning=FALSE}\nsetwd(\"~/Dropbox/2015-6-PhD/results+script/16-07-Exp1-2\")\ninformation1 <- read.csv('Subject_Information1.csv', header = TRUE)\ninformation2 <- read.csv('Subject_Information2.csv', header = TRUE)\nexperimental_items1 <- read.csv('Experimental_items1.csv', header = TRUE)\nexperimental_items2 <- read.csv('Experimental_items2.csv', header = TRUE)\ncontrols1 <- read.csv('Controls1.csv', header = TRUE)\ncontrols2 <- read.csv('Controls2.csv', header = TRUE)\n\nexperimental_items1$experiment <- '1'\nexperimental_items2$experiment <- '2'\ncontrols1$experiment <- '1'\ncontrols2$experiment <- '2'\ninformation1$experiment <- '1'\ninformation2$experiment <- '2'\n\nexperimental_items1$predicate_prime_con[experimental_items1$predicate_prime=='left'|experimental_items1$predicate_prime=='right'] <- 'left/right' \nexperimental_items1$predicate_prime_con[experimental_items1$predicate_prime=='next'] <- 'next'\nexperimental_items2$predicate_prime_con <- experimental_items2$predicate_prime\n\nexperimental_items <- bind_rows(experimental_items1,experimental_items2)\nexperimental_items$quantifier_prime<- 'every'\nexperimental_items$experiment <- factor(experimental_items$experiment)\nrm(experimental_items1,experimental_items2)\n\nsetwd(\"~/Dropbox/2015-6-PhD/results+script/16-09-Exp3-5\")\ninformation3 <- read.csv('Subject_Information3.csv', header = TRUE)\ninformation4 <- read.csv('Subject_Information4.csv', header = TRUE)\ninformation5 <- read.csv('Subject_Information5.csv', header = TRUE)\nexperimental_items3 <- read.csv('Experimental_items3.csv', header = TRUE)\nexperimental_items4 <- read.csv('Experimental_items4.csv', header = TRUE)\nexperimental_items5 <- read.csv('Experimental_items5.csv', header = TRUE)\ncontrols3 <- read.csv('Controls3.csv', header = TRUE)\ncontrols4 <- read.csv('Controls4.csv', header = TRUE)\ncontrols5 <- read.csv('Controls5.csv', header = TRUE)\n\n\nexperimental_items3$predicate_prime_con <- experimental_items3$predicate_prime\nexperimental_items4$predicate_prime_con <- experimental_items4$predicate_prime\nexperimental_items5$predicate_prime_con[experimental_items5$predicate_prime=='left'|experimental_items5$predicate_prime=='right'] <- 'left/right' \nexperimental_items5$predicate_prime_con[experimental_items5$predicate_prime=='next'] <- 'next'\n\nexperimental_items_bis <- bind_rows(experimental_items4,experimental_items3)\nexperimental_items_bis <- bind_rows(experimental_items_bis,experimental_items4)\nexperimental_items_bis <- bind_rows(experimental_items_bis,experimental_items5)\nexperimental_items_bis$experiment <- factor(experimental_items_bis$experiment)\nexperimental_items <- bind_rows(experimental_items, experimental_items_bis)\n\n\ncontrols <- bind_rows(controls4,controls3)\ncontrols <- bind_rows(controls,controls5)\ncontrols$experiment <- factor(controls$experiment)\ncontrols <- bind_rows(controls1,controls)\ncontrols <- bind_rows(controls2,controls)\n\ninformation <- bind_rows(information3,information4)\ninformation <- bind_rows(information,information5)\ninformation$experiment <- factor(information$experiment)\ninformation <- bind_rows(information,information2)\ninformation <- bind_rows(information,information1)\nexperimental_items$subject <- factor(experimental_items$subject)\ncontrols$subject <- factor(controls$subject)\nexperimental_items$experiment <- factor(experimental_items$experiment)\n\nexperimental_items$priming_type <- experimental_items$sentence_type_prime==experimental_items$sentence_type_target\n\nfor (s in levels(factor(experimental_items$subject)))\n{experimental_items$item.order[experimental_items$subject == s ] <- c(1:128)}\n\nrm(experimental_items5,experimental_items4,experimental_items3,controls3,controls4,controls5,information5,information4,information3, experimental_items_bis, controls1, controls2, information1, information2)\n\n\n```\n\n#Exclusion\n####Exclusion of not native English speakers\n\n````{r, echo=FALSE}\ntable(information$experiment)\nnatives <- subset(information, grepl('en',information$language, ignore.case=TRUE))\nnot_natives <- subset(information, !(subject %in% natives$subject))\ninformation <- subset(information, (subject %in% natives$subject))\nexperimental_items <- subset(experimental_items, !(subject %in% not_natives$subject))\ncontrols <-subset(controls, !(subject %in% not_natives$subject))\ntable(not_natives$experiment)\ntable(information$experiment)\n```\n\n####Accuracy controls\n```{r}\naccuracy_controls <- aggregate(accuracy_controls~subject+experiment, data=subset(controls),mean, na.rm=T)\nmean(accuracy_controls$accuracy_controls)\n```\n\n#####Bad performance in controls\nLess than 90% accurate in controls (as in Chemla and Bott)\n\n```{r echo=FALSE}\nbad_accuracy <- subset(accuracy_controls, accuracy_controls < 0.9) #if necessary, the information of the subjects with bad accuracy\ntable(bad_accuracy$experiment)\nexperimental_items <- subset(experimental_items, !(subject %in% bad_accuracy$subject))\ninformation <- subset(information, !(subject %in% bad_accuracy$subject))\ntable(information$experiment)\n```\n\n#### Trial exclusion based on time\n* Trials with response times below 100 ms are excluded.\n* RTs are log transformed.\n* Trials with RTs below/above 2 SD far from the mean are excluded.\n> 4.5 % of the trials are excluded.\n\n```{r echo=FALSE}\nexperimental_items <- subset(experimental_items, experimental_items$rt > 100) \nexperimental_items$rt_log <- log(experimental_items$rt)\nexclusion_criteria <- c((mean(experimental_items$rt_log) - 2*sd(experimental_items$rt_log)), (mean(experimental_items$rt_log) + 2*sd(experimental_items$rt_log)))\n\n#plot how RTs look like\npar(mfrow=c(2,1))\nhist(experimental_items$rt_log, main='a priori screening')\nabline(v=exclusion_criteria[1],col=2)\nabline(v=exclusion_criteria[2],col=2)\nplot(experimental_items$rt, col=experimental_items$subject, log='y')\n\nExcluded_Trials <- subset(experimental_items, experimental_items$rt_log<exclusion_criteria[1] | experimental_items$rt_log>exclusion_criteria[2]) \n\nprint(\"percentage of excluded trials\")\nprint((nrow(Excluded_Trials)*100)/nrow(experimental_items))\n\nexperimental_items <- subset(experimental_items, experimental_items$rt_log > exclusion_criteria[1]) \nexperimental_items <- subset(experimental_items, experimental_items$rt_log < exclusion_criteria[2]) \n\n\n\n```\n\n\n#Analyses\n##Accuracy primes\n###Overall\n```{r echo=FALSE, fig.width=8}\naccuracy_primes_subject <- aggregate(accuracy_primes~subject+prime_configuration+sentence_type_prime+experiment, data=subset(experimental_items, element.number==\"prime\"),mean, na.rm=T)\n\naccuracy_primes_overall <- ddply(accuracy_primes_subject, c(\"prime_configuration\",\"sentence_type_prime\", \"experiment\"),\n            function(accuracy_primes_overall)c(response=mean(accuracy_primes_overall$accuracy_primes, na.rm=T), se=se(accuracy_primes_overall$accuracy_primes, na.rm=T)))\n\nlibrary(knitr)\nkable(accuracy_primes_overall, format = \"markdown\",digits=2)\n\nplot_primes <- ggplot(accuracy_primes_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Accuracy in primes\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('mean correct responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_primes + facet_grid(experiment~sentence_type_prime)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=15, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank()) \n\n```\n\n####Plots per predicate\n```{r echo=FALSE, eval=FALSE, results=FALSE}\naccuracy_primes_subject <- aggregate(accuracy_primes~subject+prime_configuration+predicate_prime_con+experiment, data=subset(experimental_items, element.number==\"prime\"),mean, na.rm=T)\n\naccuracy_primes_overall <- ddply(accuracy_primes_subject, c(\"prime_configuration\",\"predicate_prime_con\",\"experiment\"),\n            function(accuracy_primes_overall)c(response=mean(accuracy_primes_overall$accuracy_primes, na.rm=T), se=se(accuracy_primes_overall$accuracy_primes, na.rm=T)))\n\n\nplot_primes2 <- ggplot(accuracy_primes_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Accuracy in primes\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('mean correct responses')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_primes2 + facet_wrap(~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=15, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank()) \n\n\n```\n\n##Target results\nOnly targets after accurate (correct) primes are taken into account in the analyses (Only when participants answer to primes correctly we can know that they are accessing to the right reading)\n\n\n###Overall\n```{r echo=FALSE, fig.width=11, fig.height=7}\n#Only targets after accurate primes\naccurate_targets <- subset(experimental_items, element.number==\"probe\" & accuracy_primes==TRUE)\n\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+experiment, data= accurate_targets,mean, na.rm=T)\ndis <- ggplot(target_subject_variation, aes(x=prime_configuration, y=matching_wide_target, fill=prime_configuration)) + geom_boxplot() + scale_fill_brewer(palette=\"Set1\")+  \n    guides(fill=FALSE) \ndis + facet_wrap(~experiment)\n\n#U-Wide responses per subject, type of prime and sentence configuration\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+experiment+sentence_type_target+sentence_type_prime+quantifier_prime, data= accurate_targets,mean, na.rm=T)\n\ntarget_subject_variation$sentence_type_prime <- factor(target_subject_variation$sentence_type_prime)\nlevels(target_subject_variation$sentence_type_prime) <- c(\"Prime:E-U\", \"Prime:U-E\")\ntarget_subject_variation$sentence_type_target <- factor(target_subject_variation$sentence_type_target)\nlevels(target_subject_variation$sentence_type_target) <- c(\"Target:E-U\", \"Target:U-E\")\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"experiment\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\nkable(target_overall, format = \"markdown\",digits=2)\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"sentence_type_prime\",\"sentence_type_target\",\"experiment\", \"quantifier_prime\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\n#general plot\nplot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Target responses\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_targets + facet_grid(sentence_type_target~experiment+ quantifier_prime+sentence_type_prime)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank()) + theme(legend.position=\"none\")\n\n```\n\n\n###Target results per predicate in primes\n(Note: the predicate in targets is always above/below for both experiments 1 and 2)\n\n####Sentence type collapsed\n```{r echo=FALSE, fig.width=11}\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+predicate_prime_con+experiment, data= accurate_targets,mean, na.rm=T)\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"predicate_prime_con\",\"experiment\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\n#general plot\n# plot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n#       scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n#       geom_bar(position=position_dodge(), stat=\"identity\") +\n#       ggtitle(\"Target responses per predicate in primes (sentence_type collapsed)\")+ \n#       scale_fill_brewer(palette=\"Set1\")+  \n#       xlab(' ')  +\n#       ylab('% U-wide choices')  +\n#       geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n# \n# plot_targets + facet_grid(.~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank(), legend.position='none') \n\n\ntarget_subject_variation <- aggregate(matching_wide_target~subject+predicate_target+prime_configuration+predicate_prime_con+experiment, data= accurate_targets,mean, na.rm=T)\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"predicate_prime_con\",\"experiment\",\"predicate_target\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\nplot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Target responses per predicate in primes (sentence_type collapsed)\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\n\nplot_targets + facet_grid(predicate_target~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=15, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=11), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank(), legend.position='none') \n\n\n\n```\n\n####Sentence type in target per predicate\n```{r echo=FALSE, fig.width=12}\n#general effect\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+ experiment+sentence_type_target+predicate_prime_con+sentence_type_prime, data= accurate_targets,mean, na.rm=T)\n\ntarget_subject_variation$sentence_type_target <- factor(target_subject_variation$sentence_type_target)\nlevels(target_subject_variation$sentence_type_target) <- c(\"Target:E-U\", \"Target:U-E\")\n\ntarget_subject_variation$sentence_type_prime <- factor(target_subject_variation$sentence_type_prime)\nlevels(target_subject_variation$sentence_type_prime) <- c(\"Prime:E-U\", \"Prime:U-E\")\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"predicate_prime_con\",\"sentence_type_target\", \"experiment\", \"sentence_type_prime\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\n#general plot\nplot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Target responses: Predicate in prime x sentence type in targets and primes\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_targets + facet_grid(sentence_type_target+sentence_type_prime~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank() , legend.position='none') \n\n```\n\n####Between vs within priming x predicate\n```{r echo=FALSE, fig.width=11}\n#general effect\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+ experiment+priming_type+predicate_prime_con, data= accurate_targets,mean, na.rm=T)\n\ntarget_subject_variation$priming_type <- factor(target_subject_variation$priming_type)\nlevels(target_subject_variation$priming_type) <- c(\"Between priming\", \"Within priming\")\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"predicate_prime_con\",\"priming_type\", \"experiment\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\n#general plot\nplot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Target responses: Predicate in prime x Between/Within sentence type\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_targets + facet_grid(priming_type~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=11), axis.ticks = element_blank() , legend.position='none') \n\n```\n\n####More details\n```{r echo=FALSE, fig.width=11,fig.height=10}\n#general effect\ntarget_subject_variation <- aggregate(matching_wide_target~subject+prime_configuration+ experiment+sentence_type_target+sentence_type_prime+predicate_prime_con, data= accurate_targets,mean, na.rm=T)\n\ntarget_subject_variation$sentence_type_prime <- factor(target_subject_variation$sentence_type_prime)\nlevels(target_subject_variation$sentence_type_prime) <- c(\"Prime:Existential-Universal\", \"Prime:Universal-Existential\")\ntarget_subject_variation$sentence_type_target <- factor(target_subject_variation$sentence_type_target)\nlevels(target_subject_variation$sentence_type_target) <- c(\"Target:Existential-Universal\", \"Target:Universal-Existential\")\n\ntarget_overall <- ddply(target_subject_variation, c(\"prime_configuration\",\"predicate_prime_con\",\"sentence_type_target\", \"sentence_type_prime\", \"experiment\"),\n            function(target_overall)c(response=mean(target_overall$matching_wide_target, na.rm=T), se=se(target_overall$matching_wide_target, na.rm=T)))\n\n\nplot_targets <- ggplot(target_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      scale_y_continuous(breaks=c(0,.25,.5,.75,1), limits=c(0,1)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Target responses\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_targets + facet_grid(sentence_type_target+sentence_type_prime~experiment+predicate_prime_con)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=11), axis.text.y = element_text(colour='black', size=11), axis.ticks = element_blank()) \n\n\n\n\n\n```\n\n###Effects over time\n```{r echo=FALSE, warning=FALSE, fig.width=11}\ntarget_overall_order <- ddply(accurate_targets, c(\"prime_configuration\", \"item.order\", \"experiment\", \"priming_type\"),\n            function(target_overall_order)c(response=mean(target_overall_order$matching_wide_target, na.rm=T), se=se(target_overall_order$matching_wide_target, na.rm=T)))\n\ntarget_overall_order$priming_type <- factor(target_overall_order$priming_type)\nlevels(target_overall_order$priming_type) <- c(\"Between priming\", \"Within priming\")\n\n\nplot_targets_order <- ggplot(target_overall_order, aes(x=item.order, y=response, color=prime_configuration)) +\n      scale_y_continuous() +\n      ggtitle(\"Target responses along the experiment\")+ \n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('% U-wide choices')  +\n    geom_point()+\n  geom_smooth(method=lm) \n\nplot_targets_order + facet_grid(priming_type~experiment)+theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=11, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=15), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank(), legend.position ='top') \n\n```\n\n##Response times\n\n```{r Response times, echo=FALSE, fig.width=10}\nRTs <- aggregate(rt_log~subject+prime_configuration+ experiment +predicate_prime_con+matching_wide_target, data= accurate_targets,mean, na.rm=T)\nRTs_overall <- ddply(RTs, c(\"prime_configuration\",\"predicate_prime_con\",\"matching_wide_target\", \"experiment\"),\n            function(RTs_overall)c(response=mean(RTs_overall$rt_log, na.rm=T), se=se(RTs_overall$rt_log, na.rm=T)))\n\nplot_rts <- ggplot(RTs_overall, aes(x=prime_configuration, y=response, fill=prime_configuration)) +\n      geom_bar(position=position_dodge(), stat=\"identity\") +\n      ggtitle(\"Log-response-times\")+ \n  coord_cartesian(ylim=c(7.8, 8.5)) +\n      scale_fill_brewer(palette=\"Set1\")+  \n      xlab(' ')  +\n      ylab('log-rts')  +\n      geom_errorbar(aes(ymin=response-se, ymax=response+se), width=.2, position=position_dodge(.9))\nplot_rts + facet_grid(matching_wide_target~experiment+predicate_prime_con, labeller = label_both)+ theme_bw() + theme(panel.background= element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(colour='black', size=15, lineheight=.8), axis.title.y= element_text(face=\"bold\", colour='grey55', size=11), axis.text.y = element_text(colour='black', size=15), axis.ticks = element_blank(), legend.position='top') \n\n```\n\n\n#Stats\n\n##Experiment 1 : Replication of our results\n###Let's try collapsing sentence types and look for an effect of priming in each predicate (NEXT vs LEFT/RIGHT) separately\n```{r}\nrequire(car)\nrequire(lattice)\nmydata <- subset(accurate_targets, experiment=='1')\nmydata$item.number <- factor(mydata$item.number)\nmydata$prime_configuration_numeric<-as.numeric(factor(mydata$prime_configuration))-1\nmydata$predicate_prime_con <- factor(mydata$predicate_prime_con)\nmydata$predicate_prime_con_numeric <- as.numeric(mydata$predicate_prime_con)-1\nmydata$shapes_target <- factor(mydata$shapes_target)\n\n#More complete model does not converge. \n#modelfull <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric + (1+predicate_prime_con_numeric*prime_configuration_numeric||subject) + 1+predicate_prime_con_numeric*prime_configuration_numeric||shapes_target), data= mydata,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\n\n#Reducing the random slopes per items (shapes)\nmodelByPredicateNoCorr <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric + (1+predicate_prime_con_numeric*prime_configuration_numeric||subject) + (1|shapes_target), data= mydata,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\nsummary(modelByPredicateNoCorr)\nAnova(modelByPredicateNoCorr, type=3)\nsummary(rePCA(modelByPredicateNoCorr))\n\nmodelByPredicateNoCorr2 <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric + (1|subject) + (predicate_prime_con_numeric*prime_configuration_numeric||shapes_target), data = mydata,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\nsummary(modelByPredicateNoCorr2)\nAnova(modelByPredicateNoCorr2, type=3)\nsummary(rePCA(modelByPredicateNoCorr2))\n\n\n##This one does converge, with the same fixed effect estimates as before.\nmodelByPredicateNoCorr3 <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric +(1|shapes_target) + (1|subject) , data = mydata,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\nsummary(modelByPredicateNoCorr3)\nAnova(modelByPredicateNoCorr3, type=3)\nsummary(rePCA(modelByPredicateNoCorr3))\n\nd1 <- ranef(modelByPredicateNoCorr3, postVar=TRUE)\n#double square bracket access the lists in d1\na <- dotplot(d1)[[\"shapes_target\"]]\nb <- dotplot(d1)[[\"subject\"]]\n#grid.arrange combines your plots\nlibrary(gridExtra)\ngrid.arrange(a,b, nrow=1)\n\n```\n\n##Look at the two predicates (left/right vs next) separately\n```{r}\n## Here's left/right\nmodelRightLeftNoCorr <-glmer(matching_wide_target~prime_configuration_numeric + (prime_configuration_numeric||subject) + (prime_configuration_numeric||shapes_target), data = subset(mydata, predicate_prime_con == \"left/right\"),control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\nsummary(modelRightLeftNoCorr)\nAnova(modelRightLeftNoCorr, type=3)\nsummary(rePCA(modelRightLeftNoCorr))\n\n##And here's next to\nmodelNextNoCorr <-glmer(matching_wide_target~prime_configuration_numeric + (prime_configuration_numeric||subject) + (prime_configuration_numeric||shapes_target), data = subset(mydata, predicate_prime_con == \"next\"),control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\nsummary(modelNextNoCorr)\nAnova(modelNextNoCorr, type=3)\nsummary(rePCA(modelNextNoCorr))\n\n```\n\n\n##Experiment 2: Replication of Chemla and Bott results\n```{r}\nmydata2 <- subset(accurate_targets, experiment=='2')\nmydata2$item.number <- factor(mydata2$item.number)\nmydata2$prime_configuration_numeric<-as.numeric(factor(mydata2$prime_configuration))-1\nmydata2$predicate_prime_con <- factor(mydata2$predicate_prime_con)\nmydata2$predicate_prime_con_numeric <- as.numeric(mydata2$predicate_prime_con)-1\n\n#This does not converge\n#model.full.exp2 <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric + (1+predicate_prime_con_numeric*prime_configuration_numeric||subject) + (1+predicate_prime_con_numeric*prime_configuration_numeric||shapes_target), data= mydata2,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\n\n#summary(model.full.exp2)\n#Anova(model.full.exp2, type=3)\n#summary(rePCA(model.full.exp2))\n\nmodel.full.exp2.2 <-glmer(matching_wide_target~predicate_prime_con_numeric*prime_configuration_numeric + (1+prime_configuration_numeric||subject) + (predicate_prime_con_numeric*prime_configuration_numeric||shapes_target), data = mydata2,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\n\nsummary(model.full.exp2.2)\nAnova(model.full.exp2.2, type=3)\nsummary(rePCA(model.full.exp2.2))\n\n\n\n```\n\n###Testing priming across sentence type: between vs within\n```{r}\nmydata2$priming_type_numeric <-as.numeric(factor(mydata2$priming_type))-1\n\nmodel.priming_type.exp2. <-glmer(matching_wide_target~priming_type_numeric*prime_configuration_numeric + (1+priming_type_numeric*prime_configuration_numeric||subject) + (priming_type_numeric||shapes_target), data = mydata2,control=glmerControl(optCtrl=list(maxfun=100000)),family=binomial)\n\nsummary(model.priming_type.exp2.)\nAnova(model.priming_type.exp2., type=3)\nsummary(rePCA(model.priming_type.exp2.))\n\n```\n\n\n\n",
    "created" : 1485261667046.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2138583311",
    "id" : "CC32FE44",
    "lastKnownWriteTime" : 1476379393,
    "last_content_update" : 1476379393,
    "path" : "~/Dropbox/2015-6-PhD/results+script/Analyses_Exp1-5.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}