{
    "collab_server" : "",
    "contents" : "\n## WHICH MEASURE IS A BETTER PREDICTOR FOR THE CALIBRATION ##\n\n#1. MaxLogRatio\n#2. MaxDifference\n#3. MaxDeviation\n\n##SIMULATION FAKE DATA: Create fake data and run model \nn = 50\n# Make new subjects\nnew_subjects = calibration_data %>%\n# Select 2 unique subjects\nselect(Subject) %>%\ndistinct() %>%\n# Sample subjects n times with replacement\nsample_n(n, replace = T) %>%\n# Order by original subject ID\narrange(Subject) %>%\n# Assign subject IDs 1 to n for sampled subjects\nmutate(randomID = paste(\"randomID\", 1:n, sep = \"_\"))%>%\n# Add some variance per subject\nmutate(MaxLogRatio_sd = rnorm(n, 0, sd(calibration_data$MaxLogRatio)))%>%\nmutate(MaxDifference_sd = rnorm(n, 0, sd(calibration_data$MaxDifference)))%>%  \nmutate(MaxDeviation_sd = rnorm(n, 0, sd(calibration_data$MaxDeviation)))\n\n# Make data for new subjects\ncalibration_data_new_subjects = calibration_data %>%\n# Combine original data with list of new subjects to get\ninner_join(new_subjects) %>%\n# Make a new column for dependent variable with added variance\nmutate(MaxLogRatio_NEW = MaxLogRatio + MaxLogRatio_sd) %>%\nmutate(MaxDifference_NEW = MaxDifference + MaxDifference_sd) %>%\nmutate(MaxDeviation_NEW = MaxLogRatio + MaxDeviation_sd) \n\n\n# Run model and save result\ncalibration_data_new_subjects$Polarity_num <- as.numeric(factor(calibration_data_new_subjects$Polarity))-1\ncalibration.lmer <- lmer(Polarity_num ~ MaxLogRatio_NEW  +\n                            (1|randomID), data = calibration_data_new_subjects)\ncalibration.lmer_sum = summary(calibration.lmer)\ncalibration.lmer_anova = anova(calibration.lmer)\n\ncalibration_data.summary <- ddply(calibration_data_new_subjects, c(\"Polarity\"),\n                                  function(calibration_data.summary)c(MaxLogRatio.mean=mean(calibration_data.summary$MaxLogRatio_NEW, na.rm=T), MaxLogRatio.se=se(calibration_data.summary$MaxLogRatio_NEW, na.rm=T), MaxDifference.mean=mean(calibration_data.summary$MaxDifference_NEW, na.rm=T), MaxDifference.se=se(calibration_data.summary$MaxDifference_NEW, na.rm=T), MaxDeviation.mean=mean(calibration_data.summary$MaxDeviation_NEW, na.rm=T), MaxDeviation.se=se(calibration_data.summary$MaxDeviation_NEW, na.rm=T)))\n\n#plotting\np1 <- ggplot(calibration_data.summary, aes(x=Polarity, y=MaxLogRatio.mean, color=Polarity)) + geom_point() + geom_errorbar(aes(ymin=MaxLogRatio.mean-MaxLogRatio.se,   ymax=MaxLogRatio.mean+MaxLogRatio.se), width=.1) \np2 <- ggplot(calibration_data.summary, aes(x=Polarity, y=MaxDifference.mean, color=Polarity)) + geom_point()  + geom_point() + geom_errorbar(aes(ymin=MaxDifference.mean-MaxDifference.se,   ymax=MaxDifference.mean+MaxDifference.se), width=.1) \np3 <- ggplot(calibration_data.summary, aes(x=Polarity, y=MaxDeviation.mean , color=Polarity)) + geom_point() + geom_point() + geom_errorbar(aes(ymin=MaxDeviation.mean-MaxDeviation.se,   ymax=MaxDeviation.mean+MaxDeviation.se), width=.1) \nmultiplot(p1,p2,p3)\n",
    "created" : 1485190159001.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1160806124",
    "id" : "EA9C9CEF",
    "lastKnownWriteTime" : 1485274482,
    "last_content_update" : 1485274482910,
    "path" : "~/WebstormProjects/negationMT/R_scripts/choosing_measures.R",
    "project_path" : "R_scripts/choosing_measures.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}